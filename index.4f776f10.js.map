{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar messageStart = document.querySelector(\".message-start\");\nvar messageWin = document.querySelector(\".message-win\");\nvar messageLose = document.querySelector(\".message-lose\");\nvar startButton = document.querySelector(\".button\");\nvar gameScore = document.querySelector(\".game-score\");\nvar cells = document.querySelectorAll(\"td\");\nvar width = 4;\nvar square;\nvar score = 0;\nfunction generateNewCell(elements) {\n    var randomNumber = Math.random() * 100 < 10 ? 4 : 2;\n    var randomIndex = Math.floor(Math.random() * cells.length);\n    if (cells[randomIndex].innerHTML === \"\") {\n        cells[randomIndex].innerHTML = randomNumber;\n        cells[randomIndex].className = \"field-cell field-cell--\".concat(randomNumber);\n    } else {\n        generateNewCell(elements);\n        checkIfGameOver();\n    }\n}\nvar isStartButton = true;\nstartButton.addEventListener(\"click\", function(e) {\n    if (isStartButton) {\n        e.target.className = \"button restart\";\n        e.target.innerHTML = \"Restart\";\n        messageStart.classList.add(\"hidden\");\n        isStartButton = false;\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = cells[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var cell = _step.value;\n                square = cell;\n                for(var i = 0; i < 16; i++)square.innerHTML = \"\";\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        generateNewCell(cells);\n        generateNewCell(cells);\n        cells.forEach(function(cell) {\n            return updateInfo(cell);\n        });\n    } else {\n        e.target.className = \"button start\";\n        e.target.innerHTML = \"Start\";\n        messageStart.classList.remove(\"hidden\");\n        messageLose.classList.add(\"hidden\");\n        isStartButton = true;\n        resetInfo();\n    }\n});\nmove();\nfunction resetInfo() {\n    var existedCells = document.querySelectorAll('[class*=\"field-cell--\"]');\n    existedCells.forEach(function(cell) {\n        var lastClass = cell.classList[cell.classList.length - 1];\n        cell.classList.remove(lastClass);\n        cell.innerHTML = \"\";\n        gameScore.innerHTML = 0;\n    });\n}\n/* function updateInfo(item) {\n  item.innerHTML !== ''\n    ? (item.className = `field-cell field-cell--${item.innerHTML}`)\n    : (item.className = 'field-cell');\n\n  gameScore.innerHTML = score;\n} */ function updateInfo(item) {\n    if (item.innerHTML !== \"\") item.className = \"field-cell field-cell--\".concat(item.innerHTML);\n    else item.className = \"field-cell\";\n    gameScore.innerHTML = score;\n}\nfunction mergeRow() {\n    var mergedTotal;\n    for(var i = 0; i < cells.length - 1; i++)if (cells[i].innerHTML === cells[i + 1].innerHTML && cells[i].parentElement === cells[i + 1].parentElement) {\n        mergedTotal = parseInt(cells[i].innerHTML) + parseInt(cells[i + 1].innerHTML);\n        cells[i].innerHTML = mergedTotal;\n        cells[i + 1].innerHTML = \"\";\n        if (mergedTotal === parseInt(mergedTotal)) score += mergedTotal;\n    } else isPossiblePlay();\n    checkIfWin();\n}\nfunction mergeColumn() {\n    var mergedTotal;\n    for(var i = 0; i < cells.length - 4; i++)if (cells[i].innerHTML === cells[i + width].innerHTML) {\n        mergedTotal = parseInt(cells[i].innerHTML) + parseInt(cells[i + width].innerHTML);\n        cells[i].innerHTML = mergedTotal;\n        cells[i + width].innerHTML = \"\";\n        if (mergedTotal === parseInt(mergedTotal)) score += mergedTotal;\n    } else isPossiblePlay();\n    checkIfWin();\n}\nfunction isPossiblePlay() {\n    for(var i = 0; i < cells.length - 4; i++){\n        if (cells[i].innerHTML === cells[i + width].innerHTML) return true;\n    }\n    for(var i1 = 0; i1 < cells.length - 1; i1++){\n        if (cells[i1].innerHTML === cells[i1 + 1].innerHTML && cells[i1].parentElement === cells[i1 + 1].parentElement) return true;\n    }\n    return false;\n}\nfunction moveRight() {\n    for(var i = 0; i < cells.length; i++)if (i % 4 === 0) {\n        var totalOne = cells[i].innerHTML;\n        var totalTwo = cells[i + 1].innerHTML;\n        var totalThree = cells[i + 2].innerHTML;\n        var totalFour = cells[i + 3].innerHTML;\n        var row = [\n            parseInt(totalOne),\n            parseInt(totalTwo),\n            parseInt(totalThree),\n            parseInt(totalFour)\n        ];\n        var filteredRow = row.filter(function(num) {\n            return num;\n        });\n        var zeros = Array(4 - filteredRow.length).fill(\"\");\n        var newRow = zeros.concat(filteredRow);\n        cells[i].innerHTML = newRow[0];\n        cells[i + 1].innerHTML = newRow[1];\n        cells[i + 2].innerHTML = newRow[2];\n        cells[i + 3].innerHTML = newRow[3];\n        cells.forEach(function(item) {\n            return updateInfo(item);\n        });\n    }\n}\nfunction moveLeft() {\n    for(var i = 0; i < cells.length; i++)if (i % 4 === 0) {\n        var totalOne = cells[i].innerHTML;\n        var totalTwo = cells[i + 1].innerHTML;\n        var totalThree = cells[i + 2].innerHTML;\n        var totalFour = cells[i + 3].innerHTML;\n        var row = [\n            parseInt(totalOne),\n            parseInt(totalTwo),\n            parseInt(totalThree),\n            parseInt(totalFour)\n        ];\n        var filteredRow = row.filter(function(num) {\n            return num;\n        });\n        var zeros = Array(4 - filteredRow.length).fill(\"\");\n        var newRow = filteredRow.concat(zeros);\n        cells[i].innerHTML = newRow[0];\n        cells[i + 1].innerHTML = newRow[1];\n        cells[i + 2].innerHTML = newRow[2];\n        cells[i + 3].innerHTML = newRow[3];\n        cells.forEach(function(item) {\n            return updateInfo(item);\n        });\n    }\n}\nfunction moveUp() {\n    for(var i = 0; i < width; i++){\n        var totalOne = cells[i].innerHTML;\n        var totalTwo = cells[i + width].innerHTML;\n        var totalThree = cells[i + width * 2].innerHTML;\n        var totalFour = cells[i + width * 3].innerHTML;\n        var column = [\n            parseInt(totalOne),\n            parseInt(totalTwo),\n            parseInt(totalThree),\n            parseInt(totalFour)\n        ];\n        var filteredColumn = column.filter(function(num) {\n            return num;\n        });\n        var zeros = Array(4 - filteredColumn.length).fill(\"\");\n        var newColumn = filteredColumn.concat(zeros);\n        cells[i].innerHTML = newColumn[0];\n        cells[i + width].innerHTML = newColumn[1];\n        cells[i + width * 2].innerHTML = newColumn[2];\n        cells[i + width * 3].innerHTML = newColumn[3];\n        cells.forEach(function(item) {\n            return updateInfo(item);\n        });\n    }\n}\nfunction moveDown() {\n    for(var i = 0; i < width; i++){\n        var totalOne = cells[i].innerHTML;\n        var totalTwo = cells[i + width].innerHTML;\n        var totalThree = cells[i + width * 2].innerHTML;\n        var totalFour = cells[i + width * 3].innerHTML;\n        var column = [\n            parseInt(totalOne),\n            parseInt(totalTwo),\n            parseInt(totalThree),\n            parseInt(totalFour)\n        ];\n        var filteredColumn = column.filter(function(num) {\n            return num;\n        });\n        var zeros = Array(4 - filteredColumn.length).fill(\"\");\n        var newColumn = zeros.concat(filteredColumn);\n        cells[i].innerHTML = newColumn[0];\n        cells[i + width].innerHTML = newColumn[1];\n        cells[i + width * 2].innerHTML = newColumn[2];\n        cells[i + width * 3].innerHTML = newColumn[3];\n        cells.forEach(function(item) {\n            return updateInfo(item);\n        });\n    }\n}\nfunction move() {\n    document.body.addEventListener(\"keydown\", function(e) {\n        switch(e.key){\n            case \"ArrowLeft\":\n                moveLeft();\n                mergeRow();\n                moveLeft();\n                generateNewCell(cells);\n                break;\n            case \"ArrowRight\":\n                moveRight();\n                mergeRow();\n                moveRight();\n                generateNewCell(cells);\n                break;\n            case \"ArrowUp\":\n                moveUp();\n                mergeColumn();\n                moveUp();\n                generateNewCell(cells);\n                break;\n            case \"ArrowDown\":\n                moveDown();\n                mergeColumn();\n                moveDown();\n                generateNewCell(cells);\n                break;\n        }\n    });\n}\nfunction checkIfWin() {\n    for(var i = 0; i < cells.length; i++)if (cells[i].innerHTML === \"2048\") {\n        messageWin.classList.remove(\"hidden\");\n        messageStart.classList.add(\"hidden\");\n        messageLose.classList.add(\"hidden\");\n    }\n}\nfunction checkIfGameOver() {\n    var emptyCells = 0;\n    for(var i = 0; i < cells.length; i++)if (cells[i].innerHTML === \"\") emptyCells++;\n    if (emptyCells === 0 && !isPossiblePlay()) {\n        messageLose.classList.remove(\"hidden\");\n        messageWin.classList.add(\"hidden\");\n        messageStart.classList.add(\"hidden\");\n    }\n}\n\n//# sourceMappingURL=index.4f776f10.js.map\n","'use strict';\n\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst startButton = document.querySelector('.button');\nconst gameScore = document.querySelector('.game-score');\nconst cells = document.querySelectorAll('td');\nconst width = 4;\nlet square;\nlet score = 0;\n\nfunction generateNewCell(elements) {\n  const randomNumber = Math.random() * 100 < 10 ? 4 : 2;\n  const randomIndex = Math.floor(Math.random() * cells.length);\n\n  if (cells[randomIndex].innerHTML === '') {\n    cells[randomIndex].innerHTML = randomNumber;\n    cells[randomIndex].className = `field-cell field-cell--${randomNumber}`;\n  } else {\n    generateNewCell(elements);\n    checkIfGameOver();\n  }\n}\n\nlet isStartButton = true;\n\nstartButton.addEventListener('click', (e) => {\n  if (isStartButton) {\n    e.target.className = 'button restart';\n    e.target.innerHTML = 'Restart';\n    messageStart.classList.add('hidden');\n    isStartButton = false;\n\n    for (const cell of cells) {\n      square = cell;\n\n      for (let i = 0; i < 16; i++) {\n        square.innerHTML = '';\n      }\n    }\n\n    generateNewCell(cells);\n    generateNewCell(cells);\n    cells.forEach((cell) => updateInfo(cell));\n  } else {\n    e.target.className = 'button start';\n    e.target.innerHTML = 'Start';\n    messageStart.classList.remove('hidden');\n    messageLose.classList.add('hidden');\n    isStartButton = true;\n    resetInfo();\n  }\n});\n\nmove();\n\nfunction resetInfo() {\n  const existedCells = document.querySelectorAll('[class*=\"field-cell--\"]');\n\n  existedCells.forEach((cell) => {\n    const lastClass = cell.classList[cell.classList.length - 1];\n\n    cell.classList.remove(lastClass);\n    cell.innerHTML = '';\n    gameScore.innerHTML = 0;\n  });\n}\n\n/* function updateInfo(item) {\n  item.innerHTML !== ''\n    ? (item.className = `field-cell field-cell--${item.innerHTML}`)\n    : (item.className = 'field-cell');\n\n  gameScore.innerHTML = score;\n} */\n\nfunction updateInfo(item) {\n  if (item.innerHTML !== '') {\n    item.className = `field-cell field-cell--${item.innerHTML}`;\n  } else {\n    item.className = 'field-cell';\n  }\n\n  gameScore.innerHTML = score;\n}\n\nfunction mergeRow() {\n  let mergedTotal;\n\n  for (let i = 0; i < cells.length - 1; i++) {\n    if (\n      cells[i].innerHTML === cells[i + 1].innerHTML &&\n      cells[i].parentElement === cells[i + 1].parentElement\n    ) {\n      mergedTotal =\n        parseInt(cells[i].innerHTML) + parseInt(cells[i + 1].innerHTML);\n      cells[i].innerHTML = mergedTotal;\n      cells[i + 1].innerHTML = '';\n\n      if (mergedTotal === parseInt(mergedTotal)) {\n        score += mergedTotal;\n      }\n    } else {\n      isPossiblePlay();\n    }\n  }\n  checkIfWin();\n}\n\nfunction mergeColumn() {\n  let mergedTotal;\n\n  for (let i = 0; i < cells.length - 4; i++) {\n    if (cells[i].innerHTML === cells[i + width].innerHTML) {\n      mergedTotal =\n        parseInt(cells[i].innerHTML) + parseInt(cells[i + width].innerHTML);\n      cells[i].innerHTML = mergedTotal;\n      cells[i + width].innerHTML = '';\n\n      if (mergedTotal === parseInt(mergedTotal)) {\n        score += mergedTotal;\n      }\n    } else {\n      isPossiblePlay();\n    }\n  }\n  checkIfWin();\n}\n\nfunction isPossiblePlay() {\n  for (let i = 0; i < cells.length - 4; i++) {\n    if (cells[i].innerHTML === cells[i + width].innerHTML) {\n      return true;\n    }\n  }\n\n  for (let i = 0; i < cells.length - 1; i++) {\n    if (\n      cells[i].innerHTML === cells[i + 1].innerHTML &&\n      cells[i].parentElement === cells[i + 1].parentElement\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction moveRight() {\n  for (let i = 0; i < cells.length; i++) {\n    if (i % 4 === 0) {\n      const totalOne = cells[i].innerHTML;\n      const totalTwo = cells[i + 1].innerHTML;\n      const totalThree = cells[i + 2].innerHTML;\n      const totalFour = cells[i + 3].innerHTML;\n      const row = [\n        parseInt(totalOne),\n        parseInt(totalTwo),\n        parseInt(totalThree),\n        parseInt(totalFour),\n      ];\n\n      const filteredRow = row.filter((num) => num);\n      const zeros = Array(4 - filteredRow.length).fill('');\n      const newRow = zeros.concat(filteredRow);\n\n      cells[i].innerHTML = newRow[0];\n      cells[i + 1].innerHTML = newRow[1];\n      cells[i + 2].innerHTML = newRow[2];\n      cells[i + 3].innerHTML = newRow[3];\n      cells.forEach((item) => updateInfo(item));\n    }\n  }\n}\n\nfunction moveLeft() {\n  for (let i = 0; i < cells.length; i++) {\n    if (i % 4 === 0) {\n      const totalOne = cells[i].innerHTML;\n      const totalTwo = cells[i + 1].innerHTML;\n      const totalThree = cells[i + 2].innerHTML;\n      const totalFour = cells[i + 3].innerHTML;\n      const row = [\n        parseInt(totalOne),\n        parseInt(totalTwo),\n        parseInt(totalThree),\n        parseInt(totalFour),\n      ];\n\n      const filteredRow = row.filter((num) => num);\n      const zeros = Array(4 - filteredRow.length).fill('');\n      const newRow = filteredRow.concat(zeros);\n\n      cells[i].innerHTML = newRow[0];\n      cells[i + 1].innerHTML = newRow[1];\n      cells[i + 2].innerHTML = newRow[2];\n      cells[i + 3].innerHTML = newRow[3];\n      cells.forEach((item) => updateInfo(item));\n    }\n  }\n}\n\nfunction moveUp() {\n  for (let i = 0; i < width; i++) {\n    const totalOne = cells[i].innerHTML;\n    const totalTwo = cells[i + width].innerHTML;\n    const totalThree = cells[i + width * 2].innerHTML;\n    const totalFour = cells[i + width * 3].innerHTML;\n    const column = [\n      parseInt(totalOne),\n      parseInt(totalTwo),\n      parseInt(totalThree),\n      parseInt(totalFour),\n    ];\n\n    const filteredColumn = column.filter((num) => num);\n    const zeros = Array(4 - filteredColumn.length).fill('');\n    const newColumn = filteredColumn.concat(zeros);\n\n    cells[i].innerHTML = newColumn[0];\n    cells[i + width].innerHTML = newColumn[1];\n    cells[i + width * 2].innerHTML = newColumn[2];\n    cells[i + width * 3].innerHTML = newColumn[3];\n    cells.forEach((item) => updateInfo(item));\n  }\n}\n\nfunction moveDown() {\n  for (let i = 0; i < width; i++) {\n    const totalOne = cells[i].innerHTML;\n    const totalTwo = cells[i + width].innerHTML;\n    const totalThree = cells[i + width * 2].innerHTML;\n    const totalFour = cells[i + width * 3].innerHTML;\n    const column = [\n      parseInt(totalOne),\n      parseInt(totalTwo),\n      parseInt(totalThree),\n      parseInt(totalFour),\n    ];\n\n    const filteredColumn = column.filter((num) => num);\n    const zeros = Array(4 - filteredColumn.length).fill('');\n    const newColumn = zeros.concat(filteredColumn);\n\n    cells[i].innerHTML = newColumn[0];\n    cells[i + width].innerHTML = newColumn[1];\n    cells[i + width * 2].innerHTML = newColumn[2];\n    cells[i + width * 3].innerHTML = newColumn[3];\n    cells.forEach((item) => updateInfo(item));\n  }\n}\n\nfunction move() {\n  document.body.addEventListener('keydown', (e) => {\n    switch (e.key) {\n      case 'ArrowLeft':\n        moveLeft();\n        mergeRow();\n        moveLeft();\n        generateNewCell(cells);\n        break;\n\n      case 'ArrowRight':\n        moveRight();\n        mergeRow();\n        moveRight();\n        generateNewCell(cells);\n        break;\n\n      case 'ArrowUp':\n        moveUp();\n        mergeColumn();\n        moveUp();\n        generateNewCell(cells);\n        break;\n\n      case 'ArrowDown':\n        moveDown();\n        mergeColumn();\n        moveDown();\n        generateNewCell(cells);\n        break;\n    }\n  });\n}\n\nfunction checkIfWin() {\n  for (let i = 0; i < cells.length; i++) {\n    if (cells[i].innerHTML === '2048') {\n      messageWin.classList.remove('hidden');\n      messageStart.classList.add('hidden');\n      messageLose.classList.add('hidden');\n    }\n  }\n}\n\nfunction checkIfGameOver() {\n  let emptyCells = 0;\n\n  for (let i = 0; i < cells.length; i++) {\n    if (cells[i].innerHTML === '') {\n      emptyCells++;\n    }\n  }\n\n  if (emptyCells === 0 && !isPossiblePlay()) {\n    messageLose.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n    messageStart.classList.add('hidden');\n  }\n}\n"],"names":["square","messageStart","document","querySelector","messageWin","messageLose","startButton","gameScore","cells","querySelectorAll","score","generateNewCell","elements","randomNumber","Math","random","randomIndex","floor","length","innerHTML","className","concat","checkIfGameOver","emptyCells","i","isPossiblePlay","classList","remove","add","isStartButton","updateInfo","item","mergeRow","mergedTotal","parentElement","parseInt","checkIfWin","mergeColumn","i1","moveRight","totalOne","totalTwo","totalThree","totalFour","filteredRow","row","filter","num","newRow","zeros","Array","fill","forEach","moveLeft","moveUp","width","filteredColumn","column","newColumn","moveDown","addEventListener","e","target","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","cell","existedCells","lastClass","body","key"],"version":3,"file":"index.4f776f10.js.map"}